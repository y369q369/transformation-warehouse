import datetime
import json

import influxdb_client
from influxdb_client.client.write_api import SYNCHRONOUS
import pymysql
import pytz

'''
    功能      ->    光伏电表采集异常数据处理
'''

conn = pymysql.connect(user='root', password='123456789', host='172.16.130.188', database='gfyc')
cursor = conn.cursor()

client = influxdb_client.InfluxDBClient(url='http://172.16.130.205:8092/',
                                        token='LRdIIW17oir2cDvCsrjZn1qvUOF5fFNwlqeqHGvg5LAv7pw-g_efZNbp7hhvV1aZwBecmMNgeE8dO9yPIPdLqA==',
                                        org='nari',
                                        timeout=50_000)
query_api = client.query_api()

if __name__ == '__main__':
    dev_no_list = ['1548450674', '1542268205', '1539726699', '1542169443', '1544880333', '1547258255', '1547550105',
                   '1558352979', '1558351589', '1530284179', '1531656102', '1542553874', '1540995977', '1551561107',
                   '1542825871', '1542976708', '1541523895', '1565409186', '1565485072', '1558781154', '1565355745',
                   '1558538980', '1551502391', '1565512486', '1558823654', '1542947271', '1558837586', '1558778505',
                   '1558415222', '1565521338', '1531607034', '1553463710', '1542851302', '1542869459', '1539754351',
                   '1539754358', '1531621956', '1542246786', '1533030332', '1530423913', '1547342845', '1539102003',
                   '1552831759', '1542646998', '1557261394', '1565523025', '1552829734', '1563153210', '1565417523',
                   '1539022030', '1558739465', '1547676788', '1538077950', '1558483723', '1541328127', '1533833435',
                   '1541735759', '1541201029', '1558781416', '1553377257', '1565422339', '1565430139', '1570290235',
                   '1559138448', '1558845162', '1541751231', '1527533437', '1558847081', '1558845609', '1549633927',
                   '1516381911', '1565453182', '1558820360', '1549623674', '1558724506', '1559222298', '1547476545',
                   '1558711044', '1558848236', '1558821292', '1558831755', '1558725735', '1558503685', '1551537246',
                   '1549644578', '1559039959', '1558532851', '1537152353', '1529207986', '1558408043', '1558996678',
                   '1543008928', '1545097857', '1549709037', '1549707638', '1558487719', '1553422475', '1531661837',
                   '1542830335', '1531610006', '1531623910', '1570061419', '1531600564', '1531665710', '1531658583',
                   '1531597113', '1531673137', '1564991622', '1533730897', '1541458032', '1570053377', '1531674397',
                   '1565372768', '1548362953', '1551504470', '1562866406', '1558873307', '1534605582', '1538685175',
                   '1538348336', '1530307591', '1551695025', '1530302662', '1554716772', '1530318016', '1522747357',
                   '1559053027', '1539456719', '1522734544', '1530304787', '1530313051', '1559210374', '1531678965',
                   '1542920786', '1000367042', '1541777370', '1542567076', '1545475505', '1531642849', '1541142105',
                   '1539687706', '1542098299', '1558052722', '1558444243', '1542098300', '1539702953', '1535624125',
                   '1538840600', '1569952540', '1536220853', '1554964158', '1539015370', '1539173279', '1539175154',
                   '1554369832', '1540112699', '1516636288', '1542753515', '1100464508', '1555156828', '1539175155',
                   '1519753671', '1557999819', '1542755280', '1540101104', '1541558176', '1556177449', '1541582036',
                   '1550722228', '1503065617', '1526267449', '1555174875', '1540120347', '1544554742', '1542861799',
                   '1539173840', '1542850846', '1541519025', '1543307182', '1563232208', '1539381192', '1539381194',
                   '1539406395', '1540677875', '1539297518', '1548800166', '1542016788', '1559024149', '1539358738',
                   '1540660955', '1545042956', '1542014121', '1539381191', '1540621443', '1537889867', '1539381185',
                   '1539672266', '1540612698', '1541595734', '1542753570', '1537870048', '1563599186', '1552834632',
                   '1539385219', '1560743873', '1543306678', '1539374715', '1559009663', '1539176624', '1509924875',
                   '1539184782', '1537890951', '1545797971', '1531592854', '1549604952', '1549605698', '1549604954',
                   '1549598157', '1540538250', '1533791646', '1200188843', '1541369003', '1548461214', '1200162951',
                   '1537123998', '1532982640', '1543988118', '1551614511', '1558385583', '1553467984', '1549614060',
                   '1552860922', '1549632635', '1541715149', '1531638492', '1531648096', '1531633274', '1531626337',
                   '1531649034', '1531599224', '1531647766', '1531661692', '1531670676', '1531661985', '1561492924',
                   '1561467252', '1561492923', '1561467249', '1563146064', '1530110050', '1559158731', '1565485907',
                   '1531592222', '1554952274', '1546629615', '1546630141']
    # 获取档案信息
    county_code_sql = 'select county_code, dev_no, inst_cap from dwd_cst_dygfyhsb_df where dev_no in ({})'.format(
        ','.join(dev_no_list))
    cursor.execute(county_code_sql)
    county_code_result = cursor.fetchall()
    influx_query = 'from(bucket: "{}") \n' \
                   '|> range(start: 2023-04-25T00:00:00Z, stop: 2023-05-25T00:00:00Z) \n' \
                   '|> filter(fn: (r) => r["device_id"] == "{}") \n' \
                   '|> top(n:10, columns: ["_value"]) \n' \
                   '|> map(fn: (r) => ({{ dev_no: r.device_id, value: r._value, time: r._time }}))'
    for item in county_code_result:
        query = influx_query.format(item[0], item[1])
        result = query_api.query(query=query)
        for item2 in result:
            if float(item2.records[-1]['value']) > float(item[2]) * 2:
                print('platform: {} , device: {}'.format(item[0], item[1]))
